version: '3.8'

services:
  # Redis service
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - boltq-network

  # API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["go", "run", "cmd/api/main.go"]
    ports:
      - "8080:8080"  # API port
      - "9093:9093"  # ✅ Updated: Metrics port
    environment:
      - API_PORT=8080
      - METRICS_PORT=9093       # ✅ Fixed
      - REDIS_ADDR=redis:6379
      - NUM_WORKERS=4
      - MAX_ATTEMPTS=3
      - ENVIRONMENT=development
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - boltq-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Worker service
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["go", "run", "cmd/worker/main.go"]
    ports:
      - "9094:9094"  # ✅ Metrics port for worker
    environment:
      - REDIS_ADDR=redis:6379
      - METRICS_PORT=9094       # ✅ Fixed
      - NUM_WORKERS=4
      - MAX_ATTEMPTS=3
      - ENVIRONMENT=development
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - boltq-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9094/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Prometheus service
  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9092:9090"  # Prometheus UI on host 9092
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - boltq-network
    depends_on:
      - api
      - worker

  # Grafana service
  grafana:
    image: grafana/grafana:10.0.3
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - boltq-network
    depends_on:
      - prometheus

  # Frontend Playground
  playground:
    build:
      context: ./playground
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    environment:
      - NODE_ENV=production
    networks:
      - boltq-network
    depends_on:
      - api
      - worker


# Persistent volumes
volumes:
  redis-data:
  prometheus-data:
  grafana-data:

# Network
networks:
  boltq-network:
    driver: bridge
